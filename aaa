print("update drop")

local Library = {}
local Player = game:GetService("Players").LocalPlayer

function Library:Create(name, keybind)
    if game.CoreGui:FindFirstChild(name) then
        game.CoreGui:FindFirstChild(name):Destroy()
    end

    local gui = Instance.new("ScreenGui")
    gui.Name = name
    gui.Parent = game.CoreGui

    local main = Instance.new("Frame")
    main.Size = UDim2.new(0.7, 0, 0.8, 0)
    main.Position = UDim2.new(0.3, 0, 0, 0)
    main.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
    main.Parent = gui

    local close = Instance.new("TextButton")
    close.Size = UDim2.new(0, 25, 0, 25)
    close.Position = UDim2.new(0.92, 0, 0.017, 0)
    close.BackgroundColor3 = Color3.fromRGB(42, 14, 73)
    close.Text = "."
    close.TextSize = 0
    close.Parent = main

    local open = Instance.new("ImageButton")
    open.Size = UDim2.new(0, 40, 0, 40)
    open.Position = UDim2.new(0, 211, 0, 0)
    open.BackgroundColor3 = Color3.fromRGB(17, 17, 17)
    open.Visible = false
    open.Parent = gui

    close.MouseButton1Click:Connect(function()
        open.Visible = true
        main.Visible = false
    end)

    open.MouseButton1Click:Connect(function()
        open.Visible = false
        main.Visible = true
    end)

    local line1 = Instance.new("Frame")
    line1.Size = UDim2.new(1, 0, 0.005, 0)
    line1.Position = UDim2.new(0, 0, 0.135, 0)
    line1.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
    line1.Parent = main

    local tabframe = Instance.new("Frame")
    tabframe.Size = UDim2.new(0.25, 0, 0.73, 0)
    tabframe.Position = UDim2.new(0, 0, 0.135, 0)
    tabframe.BackgroundTransparency = 1
    tabframe.Parent = main

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIListLayout.Parent = tabframe

    local Window = {}
    function Window:tab(tabname, showonstartup)
        local contentframe1 = Instance.new("ScrollingFrame")
        contentframe1.Size = UDim2.new(0.745, 0, 0.725, 0)
        contentframe1.Position = UDim2.new(0.255, 0, 0.137, 0)
        contentframe1.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
        contentframe1.Parent = main
        contentframe1.Visible = showonstartup

        local Tab = Instance.new("TextButton")
        Tab.Size = UDim2.new(0.9, 0, 0.11, 0)
        Tab.Text = tabname
        Tab.BackgroundTransparency = 1
        Tab.Parent = tabframe

        Tab.MouseButton1Click:Connect(function()
            for _, v in pairs(main:GetChildren()) do
                if v:IsA("ScrollingFrame") then
                    v.Visible = false
                end
            end
            contentframe1.Visible = true
        end)

        local pageitems = {}

        function pageitems:button(text, callback)
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(0.9, 0, 0.05, 0)
            Button.Text = text
            Button.Parent = contentframe1

            Button.MouseButton1Click:Connect(function()
                pcall(callback)
            end)
        end

        function pageitems:toggle(text, state, callback)
            local toggled = state or false
            local Toggle = Instance.new("TextButton")
            Toggle.Size = UDim2.new(0.9, 0, 0.05, 0)
            Toggle.Position = UDim2.new(0.01, 0, 0.01, 0)
            Toggle.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
            Toggle.BorderSizePixel = 0
            Toggle.TextSize = 12.5
            Toggle.AutoButtonColor = false
            Toggle.Active = false
            Toggle.Text = text
            Toggle.BackgroundTransparency = 0
            Toggle.TextColor3 = Color3.fromRGB(126, 126, 126)
            Toggle.Font = Enum.Font.Code
            Toggle.Parent = contentframe1

            local toggleOn = Instance.new("TextButton")
            toggleOn.Size = UDim2.new(0, 18, 0, 18)
            toggleOn.Position = UDim2.new(0.915, 0, 0.2, 0)
            toggleOn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
            toggleOn.BorderColor3 = Color3.fromRGB(80, 80, 80)
            toggleOn.Text = "."
            toggleOn.TextColor3 = Color3.fromRGB(42, 14, 73)
            toggleOn.BackgroundTransparency = 0
            toggleOn.Parent = Toggle
						toggleOn.AutoButtonColor = false

            local toggleOff = Instance.new("TextButton")
            toggleOff.Size = UDim2.new(0, 18, 0, 18)
            toggleOff.Position = UDim2.new(0.915, 0, 0.2, 0)
            toggleOff.BackgroundColor3 = Color3.fromRGB(42, 14, 73)
            toggleOff.BorderColor3 = Color3.fromRGB(80, 80, 80)
            toggleOff.Text = "."
            toggleOff.TextColor3 = Color3.fromRGB(42, 14, 73)
            toggleOff.BackgroundTransparency = 0
            toggleOff.Visible = false
            toggleOff.Parent = Toggle
						toggleOff.AutoButtonColor = false

            local toggleUICornerOn = Instance.new("UICorner")
            toggleUICornerOn.CornerRadius = UDim.new(0, 5)
            toggleUICornerOn.Parent = toggleOn

            local toggleUICornerOff = Instance.new("UICorner")
            toggleUICornerOff.CornerRadius = UDim.new(0, 5)
            toggleUICornerOff.Parent = toggleOff

            -- Set initial toggle state
            toggleOn.Visible = not toggled
            toggleOff.Visible = toggled

            Toggle.MouseButton1Click:Connect(function()
                toggled = not toggled
                toggleOn.Visible = not toggled
                toggleOff.Visible = toggled
                pcall(callback, toggled)
            end)
        end

function pageitems:input(text, placeholder, clearonreturn, callback)
    local callback = callback or function() end

    local TextThing = Instance.new("TextButton")
    TextThing.Size = UDim2.new(0.9, 0, 0.05, 0)
    TextThing.Position = UDim2.new(0.01, 0, 0.01, 0)
    TextThing.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
    TextThing.BorderSizePixel = 0
		TextThing.TextSize = 12.5
    TextThing.AutoButtonColor = false
    TextThing.Active = false
    TextThing.Text = text -- Use the provided text for the button
    TextThing.BackgroundTransparency = 0
    TextThing.TextColor3 = Color3.fromRGB(126, 126, 126)
    TextThing.Font = Enum.Font.Code
    TextThing.Parent = contentframe1

    local TextB = Instance.new("UICorner")
    TextB.CornerRadius = UDim.new(0, 10)
    TextB.Parent = TextThing

    local InputBox = Instance.new("TextBox")
    InputBox.Size = UDim2.new(0, 25, 0, 18)
    InputBox.Position = UDim2.new(0.9, 0, 0.2, 0) -- Adjusted position for visibility
    InputBox.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
    InputBox.BorderColor3 = Color3.fromRGB(126, 126, 126)
    InputBox.BorderSizePixel = 0
    InputBox.Text = placeholder or "..." -- Set the placeholder text
    InputBox.TextColor3 = Color3.fromRGB(126, 126, 126)
    InputBox.BackgroundTransparency = 0
    InputBox.Font = Enum.Font.Code
    InputBox.TextSize = 12
    InputBox.ClearTextOnFocus = false -- Prevents clearing on focus
    InputBox.Parent = TextThing

    local InpBox = Instance.new("UICorner")
    InpBox.CornerRadius = UDim.new(0, 10)
    InpBox.Parent = InputBox

    InputBox.FocusLost:Connect(function()
        pcall(callback, tostring(InputBox.Text))
        if clearonreturn then
            InputBox.Text = "" -- Clear the input after callback
        end
    end)


        -- Existing code remains unchanged above this point

function pageitems:CreateDropdown(title, options, callback)
    local Dropdown = Instance.new("Frame")
    Dropdown.Size = UDim2.new(0.9, 0, 0.05, 0)
    Dropdown.BackgroundColor3 = Color3.fromRGB(9, 9, 9)
    Dropdown.Parent = contentframe1

    local DropDownOpen = Instance.new("TextButton")
    DropDownOpen.Size = UDim2.new(1, 0, 1, 0)
    DropDownOpen.Text = title or "Dropdown"
    DropDownOpen.BackgroundTransparency = 1
    DropDownOpen.Parent = Dropdown

    local DropDownList = Instance.new("ScrollingFrame")
    DropDownList.Size = UDim2.new(1, 0, 0.5, 0)
    DropDownList.Position = UDim2.new(0, 0, 1, 0)
    DropDownList.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
    DropDownList.Visible = false
    DropDownList.Parent = Dropdown

    local UIListLayout = Instance.new("UIListLayout")
    UIListLayout.Parent = DropDownList

    DropDownOpen.MouseButton1Click:Connect(function()
        DropDownList.Visible = not DropDownList.Visible
    end)

    for _, option in ipairs(options) do
        local DropButton = Instance.new("TextButton")
        DropButton.Size = UDim2.new(1, 0, 0.1, 0)
        DropButton.Text = option
        DropButton.BackgroundColor3 = Color3.fromRGB(13, 13, 13)
        DropButton.Parent = DropDownList

        DropButton.MouseButton1Click:Connect(function()
            pcall(callback, option)  -- Call the provided callback with the selected option
            DropDownList.Visible = false  -- Hide the dropdown after selection
        end)
    end
end

-- Existing code remains unchanged below this point

local myWindow = Library:Create("MyWindow", Enum.KeyCode.E)
local myTab = myWindow:tab("My Tab", true)

myTab:CreateDropdown("Select Option", {"Option 1", "Option 2", "Option 3"}, function(selected)
    print("You selected: " .. selected)
end)


return Library